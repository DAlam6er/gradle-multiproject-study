import com.dmdev.task.ReleaseTask

plugins {
  id 'java'
  id 'jacoco'
  id 'custom-dmdev'
}

//apply plugin: com.dmdev.plugin.CustomPlugin

group 'org.example'
version '1.0.0-SNAPSHOT'

repositories {
  mavenCentral()
}

dependencies {
  implementation project(":database")
  // не добавляются транзитивные зависимости проекта database в service, и это хорошо

  // test
  testImplementation libs.junit.jupiter.api
  testRuntimeOnly libs.junit.jupiter.engine
}

test {
  // maxParallelForks 3 // позволяет выполнять тесты в несколько потоков
  useJUnitPlatform()
}

test.finalizedBy jacocoTestReport
jacocoTestReport.dependsOn test

// добавляем property release
ext {
  release = true
}

// задача, наследующая DefaultTask
// демонстрация работы кэша

// громоздко и некрасиво, поэтому вынесем функционал в buildSrc
//task makeRelease {
//    inputs.property("release", project.release)
//    // если файл не изменился, то не будем перезапускать задачу
//    outputs.file("$rootDir/script.gradle")
//
//    doLast {
//        println "release in progress..."
//    }
//}

tasks.register('makeRelease', ReleaseTask) {
  // инициализация полей класса
  release = project.release
  releaseFile = new File("$rootDir/script.gradle")
}

